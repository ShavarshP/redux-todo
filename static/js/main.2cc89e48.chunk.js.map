{"version":3,"sources":["helpers/localStorage.js","types/user.js","store/action-creators/todo.js","store/action-creators/index.js","hooks/useActions.js","pages/todo/components/dataBox/index.js","pages/todo/components/tasksForDay/index.js","pages/todo/index.js","App.js","store/reducers/todo.js","store/reducers/index.js","store/index.js","index.js"],"names":["saveState","stateName","state","serializedState","JSON","stringify","localStorage","setItem","err","Error","UserActionTypes","setAllTasks","tasks","dispatch","type","payload","asyncSetAllTasks","a","setTimeout","setShow","IsShow","setTaskFromData","data","showing","cancel","taskFromData","newTasks","map","item","text","isDone","edit","deleteData","allTasks","newAllData","filter","item2","Todo","useActions","useDispatch","bindActionCreators","ActionCreators","DataBox","taskByData","index","onClick","className","htmlFor","length","TasksForDay","save","checkbox","useSelector","todo","useState","setText","useEffect","changOfTask","find","DateAllTasks","useMemo","style","backgroundColor","width","margin","marginTop","height","onChange","checked","fontSize","display","justifyContent","alignItems","e","target","value","newText","marginLeft","padding","newTask","setNewTask","dataTask","setDataTask","show","addTask","async","isThere","some","arr","addTaskByData","placeholder","newData","App","initialState","getItem","parse","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cc89e48.chunk.js","sourcesContent":["export const loadState = (stateName) => {\n  try {\n    const serializedState = localStorage.getItem(stateName);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (stateName, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(stateName, serializedState);\n  } catch (err) {\n    throw new Error(\"Can't save changes in local storage\");\n  }\n};\n","export const UserActionTypes = {\n  CREAT_NEW_TASK: \"CREAT_NEW_TASK\",\n  IS_SHOW_TASK: \"IS_SHOW_TASK\",\n  TASK_FROM_DATA: \"TASK_FROM_DATA\",\n  SHOWING_DATA: \"SHOWING_DATA\",\n};\n","import { saveState } from \"../../helpers/localStorage\";\nimport { UserActionTypes } from \"../../types/user\";\n\nexport const setAllTasks = (tasks) => {\n  return (dispatch) => {\n    saveState(\"todo\", tasks);\n    dispatch({\n      type: UserActionTypes.CREAT_NEW_TASK,\n      payload: tasks,\n    });\n  };\n};\n\nexport const asyncSetAllTasks = (tasks) => {\n  return async (dispatch) => {\n    await setTimeout(() => {\n      saveState(\"todo\", tasks);\n      dispatch({\n        type: UserActionTypes.CREAT_NEW_TASK,\n        payload: tasks,\n      });\n    }, 1000);\n  };\n};\n\nexport const setShow = (IsShow) => {\n  return (dispatch) => {\n    dispatch({\n      type: UserActionTypes.IS_SHOW_TASK,\n      payload: IsShow,\n    });\n  };\n};\nexport const setTaskFromData = (data) => {\n  return (dispatch) => {\n    dispatch({\n      type: UserActionTypes.TASK_FROM_DATA,\n      payload: data,\n    });\n  };\n};\n\nexport const showing = (data) => {\n  return (dispatch) => {\n    dispatch({\n      type: UserActionTypes.SHOWING_DATA,\n      payload: data,\n    });\n  };\n};\n\nexport const cancel = (taskFromData) => {\n  return (dispatch) => {\n    const newTasks = taskFromData.tasks.map((item) => {\n      return { text: item.text, isDone: false, edit: true };\n    });\n    dispatch({\n      type: UserActionTypes.TASK_FROM_DATA,\n      payload: { data: taskFromData.data, tasks: newTasks },\n    });\n  };\n};\n\nexport const deleteData = (allTasks, data) => {\n  return (dispatch) => {\n    const newAllData = allTasks.map((item) => {\n      if (item.data === data.data) {\n        const newData = {\n          data: item.data,\n          // eslint-disable-next-line array-callback-return\n          tasks: item.tasks.filter((item2) => {\n            if (item2.text !== data.text) {\n              return item2;\n            }\n          }),\n        };\n        return newData;\n      }\n      return item;\n    });\n\n    saveState(\"todo\", newAllData);\n\n    dispatch({\n      type: UserActionTypes.CREAT_NEW_TASK,\n      payload: newAllData,\n    });\n  };\n};\n\nexport const edit = (taskFromData, text) => {\n  return (dispatch) => {\n    const newTasks = taskFromData.tasks.map((item) => {\n      if (item.text === text) {\n        return { text: item.text, isDone: false, edit: false };\n      }\n      return { text: item.text, isDone: false, edit: true };\n    });\n    dispatch({\n      type: UserActionTypes.TASK_FROM_DATA,\n      payload: { data: taskFromData.data, tasks: newTasks },\n    });\n  };\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as Todo from \"./todo\";\nexport default {\n  ...Todo,\n};\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport ActionCreators from \"../store/action-creators\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(ActionCreators, dispatch);\n};\n","import { useActions } from \"../../../../hooks/useActions\";\nimport \"../style.scss\";\n\nconst DataBox = ({ data }) => {\n  const { showing } = useActions();\n\n  const taskByData = data.map((item, index) => (\n    <div onClick={() => showing(item)} key={index} className=\"taskByData\">\n      <div className=\"tab\">\n        <label\n          onClick={() => showing(item)}\n          className=\"tab-label\"\n          htmlFor=\"rd1\"\n        >\n          {item.data} - ({item.tasks.length})\n        </label>\n      </div>\n    </div>\n  ));\n  return <div className=\"data_box\">{taskByData}</div>;\n};\n\nexport default DataBox;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useActions } from \"../../../../hooks/useActions\";\nimport { useSelector } from \"react-redux\";\nimport \"../style.scss\";\n\nconst TasksForDay = ({ save, checkbox }) => {\n  const { allTasks, taskFromData } = useSelector((state) => state.todo);\n  const { deleteData, edit, cancel, setTaskFromData } = useActions();\n  const [text, setText] = useState(\"\");\n\n  const { setShow } = useActions();\n\n  useEffect(() => {\n    setText(\"\");\n  }, [taskFromData]);\n\n  const tasks = taskFromData.tasks;\n  const changOfTask = allTasks.find((item) => item.data === taskFromData.data);\n\n  useEffect(() => {\n    setTaskFromData(changOfTask);\n  }, [changOfTask.tasks.length]);\n\n  const DateAllTasks = useMemo(\n    () =>\n      tasks.map((item, index) => (\n        <div\n          key={index}\n          className=\"field\"\n          style={{ backgroundColor: \"white\", width: \"500px\", margin: \"10px\" }}\n        >\n          {item.edit ? (\n            <input\n              type=\"checkbox\"\n              style={{ marginTop: \"7px\", width: \"25px\", height: \"25px\" }}\n              onChange={() =>\n                checkbox({ text: item.text, data: taskFromData.data })\n              }\n              checked={item.isDone}\n            />\n          ) : (\n            <></>\n          )}\n          {item.edit ? (\n            <sub\n              style={{\n                width: \"400px\",\n                fontSize: \"124%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {item.text}\n            </sub>\n          ) : (\n            <input\n              style={{\n                width: \"400px\",\n                fontSize: \"105%\",\n              }}\n              onChange={\n                text\n                  ? (e) => {\n                      setText(e.target.value);\n                    }\n                  : setText(item.text)\n              }\n              value={text}\n            />\n          )}\n          <button\n            onClick={() =>\n              item.edit\n                ? (function () {\n                    edit(taskFromData, item.text);\n                  })()\n                : save({\n                    text: item.text,\n                    newText: text,\n                    data: taskFromData.data,\n                  })\n            }\n          >\n            {item.edit ? \"edit\" : \"save\"}\n          </button>\n          <button\n            style={{ marginLeft: \"1px\" }}\n            onClick={() =>\n              item.edit\n                ? deleteData(allTasks, {\n                    text: item.text,\n                    data: taskFromData.data,\n                  })\n                : cancel(taskFromData)\n            }\n          >\n            {item.edit ? \"delete\" : \"cancel\"}\n          </button>\n        </div>\n      )),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [taskFromData, changOfTask.tasks.length, text]\n  );\n\n  return (\n    <div className=\"tasks_for_day_box\">\n      <div className=\"flex\">\n        <button\n          onClick={() => setShow(false)}\n          style={{ padding: \"10px\", backgroundColor: \"#819090\" }}\n        >\n          Close\n        </button>\n        <div>{taskFromData.data}</div>\n      </div>\n      <div>{DateAllTasks}</div>\n    </div>\n  );\n};\n\nexport default TasksForDay;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"./../../hooks/useActions\";\n\nimport \"./components/style.scss\";\nimport DataBox from \"./components/dataBox\";\nimport TasksForDay from \"./components/tasksForDay\";\n\nfunction Todo() {\n  const [newTask, setNewTask] = useState(\"\");\n  const [dataTask, setDataTask] = useState(\"\");\n\n  const { allTasks, show } = useSelector((state) => state.todo);\n  const { setAllTasks, setTaskFromData, asyncSetAllTasks } = useActions();\n\n  const addTask = (async = false) => {\n    if (!newTask) {\n      return;\n    }\n    const isThere = allTasks.some((item, index, arr) => item.data === dataTask);\n    if (!isThere) {\n      const tasks = [\n        ...allTasks,\n        {\n          data: dataTask,\n          tasks: [{ text: newTask, isDone: false, edit: true }],\n        },\n      ];\n      if (async) {\n        asyncSetAllTasks(tasks);\n      } else {\n        setAllTasks(tasks);\n      }\n      setNewTask(\"\");\n      setDataTask(\"\");\n      return;\n    }\n\n    const addTaskByData = allTasks.map((item) => {\n      if (item.data === dataTask) {\n        return {\n          data: item.data,\n          tasks: [...item.tasks, { text: newTask, isDone: false, edit: true }],\n        };\n      }\n      return item;\n    });\n    if (async) {\n      asyncSetAllTasks(addTaskByData);\n    } else {\n      setAllTasks(addTaskByData);\n    }\n    setNewTask(\"\");\n    setDataTask(\"\");\n  };\n\n  const checkbox = (data) => {\n    const newAllData = allTasks.map((item) => {\n      if (item.data === data.data) {\n        const newData = {\n          data: item.data,\n          tasks: item.tasks.map((item2) => {\n            if (item2.text === data.text) {\n              return { text: item2.text, isDone: !item2.isDone, edit: true };\n            }\n            return item2;\n          }),\n        };\n        setTaskFromData(newData);\n        return newData;\n      }\n      return item;\n    });\n\n    setAllTasks(newAllData);\n  };\n\n  const save = (data) => {\n    const newAllData = allTasks.map((item) => {\n      if (item.data === data.data) {\n        const newData = {\n          data: item.data,\n          tasks: item.tasks.map((item2) => {\n            if (item2.text === data.text) {\n              return { text: data.newText, isDone: false, edit: true };\n            }\n            return item2;\n          }),\n        };\n        setTaskFromData(newData);\n        return newData;\n      }\n      return item;\n    });\n\n    setAllTasks(newAllData);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"mainScreen\">\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              value={newTask}\n              onChange={(e) => {\n                setNewTask(e.target.value);\n              }}\n              placeholder=\"New task\"\n            />\n            <input\n              type=\"date\"\n              value={dataTask}\n              onChange={(e) => {\n                setDataTask(e.target.value);\n              }}\n            />\n            <button type=\"button\" onClick={() => addTask(false)}>\n              Add\n            </button>\n\n            <button\n              type=\"button\"\n              style={{ marginLeft: \"3px\" }}\n              onClick={() => addTask(true)}\n            >\n              Add Async\n            </button>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <DataBox data={allTasks} />\n            {!show ? null : <TasksForDay checkbox={checkbox} save={save} />}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./pages/todo\";\n\nconst App = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <>\n        <Todo />\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import { UserActionTypes } from \"../../types/user\";\n\nconst initialState = {\n  allTasks: localStorage.getItem(\"todo\")\n    ? JSON.parse(localStorage.getItem(\"todo\"))\n    : [],\n  show: false,\n  taskFromData: [],\n};\n\nexport const todo = (state = initialState, action) => {\n  switch (action.type) {\n    case UserActionTypes.IS_SHOW_TASK:\n      return { ...state, show: action.payload };\n    case UserActionTypes.CREAT_NEW_TASK:\n      return { ...state, allTasks: action.payload };\n    case UserActionTypes.TASK_FROM_DATA:\n      return { ...state, taskFromData: action.payload };\n    case UserActionTypes.SHOWING_DATA:\n      return { ...state, taskFromData: action.payload, show: true };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { todo } from \"./todo\";\n\nexport const rootReducer = combineReducers({\n  todo: todo,\n});\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {rootReducer} from \"./reducers\";\n\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}